version: '3.8'

services:
  frontend:
    build:
      context: ../../frontend
      dockerfile: ../infrastructure/docker/Dockerfile.frontend
    ports:
      - "3001:80"
    environment:
      - API_URL=http://backend:3000/api
    depends_on:
      - backend

  backend:
    build:
      context: ../../backend
      dockerfile: ../infrastructure/docker/Dockerfile.backend
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://vacantshops:password@database:5432/vacantshops
      - JWT_SECRET=your-jwt-secret
      - NODE_ENV=production
    depends_on:
      - database

  database:
    image: postgres:14
    environment:
      - POSTGRES_DB=vacantshops
      - POSTGRES_USER=vacantshops
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../backend/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data: